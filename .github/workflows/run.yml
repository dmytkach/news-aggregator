# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    types: [ opened, ready_for_review ]
    branches:
      - "**"
  push:
    branches: [ "**" ]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Task
        run: |
          sh -ci "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Build cli
        run:  task build_cli

      - name: Build server
        run: task build_server

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Task
        run: |
          sh -ci "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Run tests
        run: task test

  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Task
        run: |
          sh -ci "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Run task for analyze code
        run: |
          task fmt
          task vet
          task mod_tidy
  release:
    runs-on: ubuntu-latest
    needs: [ build, test, static-analysis ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Release Please
        run: npm install -g release-please

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: release-please release-pr --token ${{ secrets.GITHUB_TOKEN }} --repo-url ${{ github.repository }}