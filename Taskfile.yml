version: '3'

vars:
  cli_aggregator: ./cli/main.go
  server_aggregator: ./server/main.go
  server_docker_image_name: "dmytkach/news-aggregator"
  server_docker_image_tag: "1.1.0"
  dockerfile_path: ".Dockerfile"
  docker_port: "8443"
  server_expose_port: "8443"
  region: "us-west-1"
  account_id: "406477933661"
  repository_name: "dmytro-news-aggregator"

includes:
  cronjob:
    taskfile: ./cronjob/Taskfile.yml
    dir: ./cronjob
  operator:
    taskfile: ./operator/Taskfile.yml
    dir: ./operator
  aggregator_chart:
    taskfile: ./aggregator-chart/Taskfile.yml
  aws_auth_chart:
    taskfile: ./dmytro-aws-auth-chart/Taskfile.yml

tasks:
  test:
    cmd: go test ./...
    desc: "Run tests"

  build_server:
    cmd: go build -o ./bin/news-aggregator-server {{.server_aggregator}}
    desc: "Build web-server version"

  build_cli:
    cmd: go build -o ./bin/news-aggregator-cli {{.cli_aggregator}}
    desc: "Build cli version"
  # Usage: task run_server -- --port=:443
  run_server:
    cmd: go run {{.server_aggregator}} {{.CLI_ARGS}}
    desc: "Run the web-server locally"
  # Usage:task run_cli -- --sources=bbc_news --keywords=president
  run_cli:
    desc: "Run cli locally"
    cmd: go run {{.cli_aggregator}} {{.CLI_ARGS}}

  fmt:
    cmd: go fmt ./...
    desc: "Run go fmt"

  vet:
    cmd: go vet ./...
    desc: "Run go vet"

  mod_tidy:
    cmd: go mod tidy
    desc: "Run go mod tidy"

  check-all:
    desc: "Run all checks: mod tidy, fmt, vet, and tests"
    deps: [ fmt, vet, test, mod_tidy ]

  docker_build:
    cmd: docker build -t {{.server_docker_image_name}}:{{.server_docker_image_tag}} .
    desc: "Build Docker image"

  docker_run:
    cmd: docker run --rm -p {{.docker_port}}:{{.server_expose_port}} {{.server_docker_image_name}}:{{.server_docker_image_tag}} {{.CLI_ARGS}}
    desc: "Run Docker container locally"

  docker_tag:
    cmd: docker tag {{.server_docker_image_name}}:{{.server_docker_image_tag}} {{.account_id}}.dkr.ecr.{{.region}}.amazonaws.com/{{.repository_name}}:{{.server_docker_image_tag}}
    desc: "Tag Docker image with ECR repository URI"

  docker_login:
    desc: "Login to the ECR registry"
    cmd: aws ecr get-login-password --region {{.region}} | docker login --username AWS --password-stdin {{.account_id}}.dkr.ecr.{{.region}}.amazonaws.com

  docker_push:
    desc: "Push the Docker image to the ECR registry"
    deps: [ docker_build, docker_tag]
    cmd: docker push {{.account_id}}.dkr.ecr.{{.region}}.amazonaws.com/{{.repository_name}}:{{.server_docker_image_tag}}

  authenticate_helm:
    desc: "Authenticate Helm with AWS ECR"
    cmds:
      - aws ecr get-login-password --region {{.region}} | helm registry login --username AWS --password-stdin {{.account_id}}.dkr.ecr.{{.region}}.amazonaws.com

  push_to_ecr:
    desc: "Push the Docker image and Helm charts to the ECR registry"
    cmds:
      - for: [docker_login, authenticate_helm, docker_push, cronjob:docker_push, operator:docker_push, aws_auth_chart:aws_auth_chart_push, aggregator_chart:aggregator_chart_push]
        task: '{{.ITEM}}'