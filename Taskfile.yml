version: '3'

vars:
  cli_aggregator: ./cli/main.go
  server_aggregator: ./server/main.go
  docker_image_name: "dmytkach/news-aggregator"
  docker_image_tag: "v1.0"
  dockerfile_path: ".Dockerfile"
  docker_port: "8443"
  server_expose_port: "8443"
  namespace_name: "news-aggregator"
tasks:
  test:
    cmd: go test ./...
    desc: "Run tests"

  build_server:
    cmd: go build -o ./bin/news-aggregator-server {{.server_aggregator}}
    desc: "Build web-server version"

  build_cli:
    cmd: go build -o ./bin/news-aggregator-cli {{.cli_aggregator}}
    desc: "Build cli version"
# Usage: task run_server -- --fetch_interval=30s
  run_server:
    cmd: go run {{.server_aggregator}} {{.CLI_ARGS}}
    desc: "Run the web-server locally"
# Usage:task run_cli -- --sources=bbc_news --keywords=president
  run_cli:
    desc: "Run cli locally"
    cmd: go run {{.cli_aggregator}} {{.CLI_ARGS}}

  fmt:
    cmd: go fmt ./...
    desc: "Run go fmt"

  vet:
    cmd: go vet ./...
    desc: "Run go vet"

  mod_tidy:
    cmd: go mod tidy
    desc: "Run go mod tidy"

  check-all:
    desc: "Run all checks: mod tidy, fmt, vet, and tests"
    deps: [ fmt, vet, test, mod_tidy ]

  docker_build:
    cmd: docker build -t {{.docker_image_name}}:{{.docker_image_tag}} .
    desc: "Build Docker image"

  docker_run:
    cmd: docker run --rm -p {{.docker_port}}:{{.server_expose_port}} {{.docker_image_name}}:{{.docker_image_tag}} {{.CLI_ARGS}}
    desc: "Run Docker container locally"

  docker_push:
    desc: "Push the Docker image to the registry"
    cmd: docker push {{.docker_image_name}}:{{.docker_image_tag}}

  deploy:
    desc: "Deploys news-aggregator app on Kubernetes cluster"
    cmds:
      - kubectl apply -f templates/deployment.yaml
      - kubectl apply -f templates/service.yaml

  undeploy:
    desc: "Removes news-aggregator app from Kubernetes cluster"
    cmds:
      - kubectl delete -f templates/deployment.yaml
      - kubectl delete -f templates/service.yaml
  create_ns:
    cmd: kubectl create namespace {{.namespace_name}}
    desc: "Create a Kubernetes namespace"

  delete_ns:
    cmd: kubectl delete namespace {{.namespace_name}}
    desc: "Delete a Kubernetes namespace"